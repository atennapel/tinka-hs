Functor (F : Type -> Type) = (fmap : {A B : Type} -> (A -> B) -> F A -> F B) ** ();

MkFunctor {F : Type -> Type} (fmap : {A B : Type} -> (A -> B) -> F A -> F B) : Functor F = [fmap];

map {F : Type -> Type} {{functor : Functor F}} : {A B : Type} -> (A -> B) -> F A -> F B
  = functor.fmap;

(<$>) = map;
