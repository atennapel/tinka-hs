the <l> (A : Type l) (x : A) : A = x;
(~:) = the;

id = \<l> {A}. the <l> A;

const <l> {A B : Type l} (x : A) (y : B) : A = x;

compose <l> {A B C : Type l} (f : B -> C) (g : A -> B) (x : A) : C = f (g x);
rcompose <l> {A B C : Type l} (f : A -> B) (g : B -> C) (x : A) : C = g (f x);
(<<) = compose;
(>>) = rcompose;

flip <l k m> {A : Type l} {B : Type k} {C : A -> B -> Type m} (f : (x : A) -> (y : B) -> C x y) (x : B) (y : A) : C y x
  = f y x;
